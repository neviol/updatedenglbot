import telebot

import os
import bot
import random
import smtplib

from telebot import types
from flask import Flask, request

TOKEN = ""
# Token of the Bot

bot = telebot.TeleBot(TOKEN)

server = Flask(__name__)

MethodGetUpdates = 'https://api.telegram.org/bot{token}/getUpdates'.format(token=TOKEN)

greetings = ["–ü—Ä–∏–≤–µ—Ç", "–•–∞–π!", "–•–µ–ª–ª–æ—É", "Greetings"]

@bot.message_handler(commands=["start"])
def welcome(message):
    sti = open("static1/Eng.webp", "rb")
    bot.send_sticker(message.chat.id, sti)
    # Sends sticker of English Flag

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("–Ø –ù–æ–≤–µ–Ω—å–∫–∏–π! üòÄ")
    button2 = types.KeyboardButton("–Ø –£—á–µ–Ω–∏–∫! üòé")

    markup.add(button1, button2)

    bot.send_message(message.chat.id,
                     "{0}, {1.first_name}!\n–Ø - <b>{2.first_name}</b> , —Å –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫ –∏ —É–∑–Ω–∞—Ç—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏! ü§ü".
                     format(random.choice(greetings), message.from_user, bot.get_me()),
                     parse_mode="html", reply_markup=markup)
    # Greets the user


@bot.message_handler(content_types=["text"])
def lalala(message):
    if message.chat.type == "private":
        if message.text == "–Ø –ù–æ–≤–µ–Ω—å–∫–∏–π! üòÄ":
            markup_new = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –ë–æ–ª—å—à–µ –ø—Ä–æ –£—á–∏—Ç–µ–ª—è")
            button2 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –†–∞—Å—Ü–µ–Ω–∫—É üí≤")
            button3 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –ë–æ–ª—å—à–µ –ø—Ä–æ –£—Ä–æ–∫ üìö")
            button4 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ü—Ä–æ–±–Ω—ã–π –£—Ä–æ–∫")
            button5 = types.KeyboardButton("‚óÄÔ∏è–ù–∞–∑–∞–¥")

            markup_new.add(button1, button2, button3, button4, button5)

            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –±—É–¥—É—â–∏–π —É—á–µ–Ω–∏–∫!", reply_markup=markup_new)

        if message.text == "–Ø –£—á–µ–Ω–∏–∫! üòé":
            markup_student = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –í—Ä–µ–º—è –¥–ª—è –£—Ä–æ–∫–∞ üïî")
            button2 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –†–∞—Å—Ü–µ–Ω–∫—É üí≤")
            button3 = types.KeyboardButton("‚óÄÔ∏è–ù–∞–∑–∞–¥")

            markup_student.add(button1, button2, button3)

            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –º–æ–π —É—á–µ–Ω–∏–∫!", reply_markup=markup_student)

        elif message.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ü—Ä–æ–±–Ω—ã–π –£—Ä–æ–∫":

            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton("–°–µ–≥–æ–¥–Ω—è", callback_data='today')
            item2 = types.InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞", callback_data='tomorrow')
            item3 = types.InlineKeyboardButton("–ù–∞ –ù–µ–¥–µ–ª–µ", callback_data='week')

            markup.add(item1, item2, item3)

            bot.send_message(message.chat.id, "–ö–æ–≥–¥–∞ –≤–∞–º –±—ã–ª–æ –±—ã —É–¥–æ–±–Ω–æ?", reply_markup=markup)

        elif message.text == "–£–∑–Ω–∞—Ç—å –†–∞—Å—Ü–µ–Ω–∫—É üí≤":

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫!", callback_data='trial_lesson')

            markup.add(item1)

            bot.send_message(message.chat.id,
                             "<b>–¶–µ–Ω–∞ –∑–∞ –£—Ä–æ–∫</b>:\n\n–î–µ—Ç—Å–∫–∏–π(4-14 –ª–µ—Ç)üë∂ - <b>250 –ì—Ä–Ω/—á–∞—Å</b> \n\n"
                             "–í–∑—Ä–æ—Å–ª—ã–π (15+ –ª–µ—Ç)üë¥ - <b>300 –ì—Ä–Ω/—á–∞—Å</b> \n\n\n<b>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</b>: \n\n"
                             "10 –î–µ—Ç—Å–∫–∏–π –ó–∞–Ω—è—Ç–∏–π (–ø–æ 60 –º–∏–Ω) - <b>2000 –≥—Ä–Ω</b> \n\n"
                             "10 –í–∑—Ä–æ—Å–ª—ã—Ö –ó–∞–Ω—è—Ç–∏–π (–ø–æ 60 –º–∏–Ω) - <b>2500 –≥—Ä–Ω</b>",
                             parse_mode="html", reply_markup=markup)

        elif message.text == "–£–∑–Ω–∞—Ç—å –ë–æ–ª—å—à–µ –ø—Ä–æ –£—Ä–æ–∫ üìö":

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫!", callback_data='trial_lesson')

            markup.add(item1)

            bot.send_message(message.chat.id,
                             "<b>–ü—Ä–æ–±–Ω—ã–π –£—Ä–æ–∫:</b>\n–ü–æ—Å–ª–µ 30 –º–∏–Ω—É—Ç–Ω–æ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ —É—Ä–æ–∫–∞ —É—á–∏—Ç–µ–ª—å –≤—ã—è—Å–Ω–∏—Ç –∫–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –∏ –ø–æ–¥–±–µ—Ä–µ—Ç –ø–æ–¥ –≤–∞—Å –∏ –≤–∞—à–∏ –∂–µ–ª–∞–Ω–∏—è –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è. \n\n<b>–î–µ—Ç—Å–∫–∏–π –ü–æ–ª–Ω—ã–π –£—Ä–æ–∫:</b>\n–ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ —É—Ä–æ–∫–∞ —Å —Ä–µ–±—ë–Ω–∫–æ–º —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã –≤–µ—Å—å —É—Ä–æ–∫ –µ–º—É –±—ã–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ –∞–≥–ª–∏–π—Å–∫–æ–º. –î–µ—Ç–∏ –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –≤–ø–∏—Ç—ã–≤–∞—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏ –ø–æ—ç—Ç–æ–º—É –≤–µ—Å—å —É—Ä–æ–∫ —Ä–µ–±—ë–Ω–æ–∫ –±—É–¥–µ—Ç –º–∞–∫—Å–º–∞–ª—å–Ω–æ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –æ–Ω –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –∏ —Å–ª—É—à–∞—Ç—å —Ä–µ—á—å –û–ª–µ–≥–∞. –£—Ä–æ–∫ –≤—ã—Å—Ç—Ä–æ–µ–Ω –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —á—Ç–æ –ø–æ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–¥—ë—Ç –≤ –ø–µ—Ä–µ–º–µ—à–∫—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏.\n\n<b>–í–∑—Ä–æ—Å–ª—ã–π –ü–æ–ª–Ω—ã–π –£—Ä–æ–∫:</b>\n–û–¥–∏–Ω –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —É—Ä–æ–∫ –¥–ª–∏—Ç—å—Å—è 60 –º–∏–Ω—É—Ç. –ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å —É—Ä–æ–∫–∞ —ç—Ç–æ –ø–æ–≥—Ä—É–∑–∏—Ç—å –≤–∞—Å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –±—É–¥–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –æ–±—Å—É–∂–¥–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã, —Ä–∞–∑—à–∏—Ä—è—Ç—å —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å, –∏ —É—á–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö.\n\n<b>–ë–æ–Ω—É—Å—ã:</b>\n–ö–æ–≥–¥–∞ –≤—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å –û–ª–µ–≥–æ–º, –≤—ã –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç–µ —É—Ä–æ–∫–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –Ω–æ –∏ –∫—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. <b>–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç?</b> - –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–º–æ—á—å —Å —á–µ–º-—Ç–æ –≤—Ä–æ–¥–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ —Ä–µ–¥–∞–∫—Ü–∏–∏ –∫–∞–∫–æ–≥–æ-—Ç–æ —Ç–µ—Å–∫—Å—Ç–∞ –∏–ª–∏ –≤–∞–º –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–µ–Ω –±—É–¥–µ—Ç —Å–æ–≤–µ—Ç, —Ç–æ –û–ª–µ–≥ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Ä–∞–¥ –≤–∞–º –ø–æ–º–æ—á—å.",
                             parse_mode="html", reply_markup=markup)

        elif message.text == "–£–∑–Ω–∞—Ç—å –ë–æ–ª—å—à–µ –ø—Ä–æ –£—á–∏—Ç–µ–ª—è":

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫!", callback_data='trial_lesson')

            markup.add(item1)

            bot.send_message(message.chat.id,
                             "<b>–¢–≤–æ–π —É—á–∏—Ç–µ–ª—å –û–ª–µ–≥.</b>\n\n–û–Ω 12 –ª–µ—Ç —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ —É–¥–µ–ª–∏–ª –ê–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É —Ç–∞–∫ –∫–∞–∫ —É—á–∏–ª—Å—è –≤ –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–π –®–∫–æ–ª–µ. "
                             "–î–ª—è –æ–±—É—á–µ–Ω–∏—è –≤–∑—Ä–æ—Å–ª—ã—Ö –∏ –¥–µ—Ç–µ–π –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏–¥–µ–∏ –∞ –Ω–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —É—á–µ–±–Ω–∫–∏ –∏ –∑–∞–∑—É–±—Ä–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. "
                             "–û–Ω –∏–º–µ–µ—Ç –æ–ø—ã—Ç –≤ –æ–±—É—á–µ–Ω–∏–∏ –∫–∞–∫ –¥–µ—Ç–µ–π —Ç–∞–∫ –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö –∏ —Å–∞–º –∑–Ω–∞–µ—Ç —á—Ç–æ –≤ –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–æ–≤ —É—á–µ–Ω–∏–∫–∏ –Ω–µ –ª—é–±—è—Ç, —Ç–∞–∫ –∫–∞–∫ –∑–Ω–∞–µ—Ç –æ–Ω –∞–∂ –ø—è—Ç—å —è–∑—ã–∫–æ–≤. "
                             "–í —Å–≤–æ–±–æ–¥–Ω–æ–µ –æ—Ç –∏–∑—É—á–µ–Ω–∏—è –ê–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤—Ä–µ–º—è –æ–Ω –∑–∞–Ω–∏–º–∞–µ—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –ø–æ—ç—Ç–æ–º—É –Ω–∞–ø–∏—Å–∞–ª –º–æ–π –∫–æ–¥ —Å–∞–º. "
                             "–Ø —É–≤–µ—Ä–µ–Ω —á—Ç–æ –æ–Ω –±—É–¥–µ—Ç —Ä–∞–¥ –Ω–∞–π—Ç–∏ –≤—Ä–µ–º—è –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å —Ç–æ–±–æ–π –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫. ",
                             parse_mode="html", reply_markup=markup)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –í—Ä–µ–º—è –¥–ª—è –£—Ä–æ–∫–∞ üïî":

            markup_time = types.InlineKeyboardMarkup(row_width=4)
            item1 = types.InlineKeyboardButton("13:00", callback_data="13")
            item2 = types.InlineKeyboardButton("14:00", callback_data="14")
            item3 = types.InlineKeyboardButton("15:00", callback_data="15")
            item4 = types.InlineKeyboardButton("16:00", callback_data="16")
            item5 = types.InlineKeyboardButton("17:00", callback_data="17")
            item6 = types.InlineKeyboardButton("18:00", callback_data="18")
            item7 = types.InlineKeyboardButton("19:00", callback_data="19")
            item8 = types.InlineKeyboardButton("20:00", callback_data="20")
            item9 = types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ —Å–≤–æ–µ –≤—Ä–µ–º—è", callback_data="sometime")

            markup_time.add(item1, item2, item3, item4, item5, item6, item7, item8, item9)

            bot.send_message(message.chat.id, "–í—ã–±–∏—Ä–∞–π –í—Ä–µ–º—è!", reply_markup=markup_time)

        elif message.text == "‚óÄÔ∏è–ù–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–Ø –ù–æ–≤–µ–Ω—å–∫–∏–π! üòÄ")
            button2 = types.KeyboardButton("–Ø –£—á–µ–Ω–∏–∫! üòé")

            markup.add(button1, button2)

            bot.send_message(message.chat.id, "–ù–∞–∑–∞–¥", reply_markup=markup)

        else:
            pass


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:

            if call.data == "13":
                time = "13:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_13)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="13:00", reply_markup=None)

            elif call.data == "14":
                time = "14:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_14)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="14:00", reply_markup=None)

            elif call.data == "15":
                time = "15:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_15)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="15:00", reply_markup=None)

            elif call.data == "16":
                time = "16:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_16)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="16:00", reply_markup=None)

            elif call.data == "17":
                time = "17:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_17)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="17:00", reply_markup=None)

            elif call.data == "18":
                time = "18:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_18)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="18:00", reply_markup=None)

            elif call.data == "19":
                time = "19:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_19)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="19:00", reply_markup=None)

            elif call.data == "20":
                time = "20:00"
                client_name = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! (–ü—Ä–∏–º–µ—Ä: Oleg)")
                bot.register_next_step_handler(client_name, take_name_20)

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                      text="20:00", reply_markup=None)

            elif call.data == "sometime":
                client_time = bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–µ –∏–º—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –∏ –≤—Ä–µ–º—è —Ç–∞–∫ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–µ.\n \n <b>–ü—Ä–∏–º–µ—Ä:</b> Oleg 13:45", parse_mode="html")
                bot.register_next_step_handler(client_time, take_sometime)

            elif call.data == "today" or "tomorrow" or "week" or "trial_lesson":
                phone_answer = bot.send_message(call.message.chat.id, "–û—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞! ‚òé")
                bot.register_next_step_handler(phone_answer, take_phone)



    except Exception as e:
        print(repr(e))


def take_phone(message):
    if "+380" in message.text or "380" in message.text or "0" in message.text:
        server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
        server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
        server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                        "You Have a New Client\n His Phone Number: " + message.text + "\n")
        server.quit()

        bot.send_message(message.chat.id, "–û–ª–µ–≥ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞. ‚ò∫")
    else:
        bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>+380*********</b> –∏–ª–∏ <b>0*********</b>.\n\n–ü–æ–ø—Ä–æ–±—É–π –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –µ—â–µ —Ä–∞–∑!", parse_mode="html")

def take_name_13(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 13:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 13:00 ‚ò∫")

def take_name_14(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 14:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 14:00 ‚ò∫")

def take_name_15(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 15:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 15:00 ‚ò∫")


def take_name_16(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 16:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 16:00 ‚ò∫")


def take_name_17(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 17:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 17:00 ‚ò∫")


def take_name_18(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 18:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 18:00 ‚ò∫")


def take_name_19(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 19:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 19:00 ‚ò∫")


def take_name_20(message):
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
    server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                    "You Have a New Client\n His Name: " + message.text + "\n His Time: 20:00")
    server.quit()

    bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ 20:00 ‚ò∫")

def take_sometime(message):

    name = bot.send_message(message.chat.id, message.text)
    name = name.text
    name = name.split()
    name.append("Student")
    if name[1] == "Student":
        bot.send_message(message.chat.id, "–£–ø—Å, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–ª. üòÖ\n–ò–º—è –∏ –≤—Ä–µ–º—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n\n<b>–ü—Ä–∏–º–µ—Ä:</b> Oleg 13:45", parse_mode="html")
    else:
        server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
        server.login("ole.nevidomskyi@gmail.com", "fjpbphzbfdzhdzxg")
        server.sendmail("ole.nevidomskyi@gmail.com", "ole.nevidomskyi@gmail.com",
                        "You Have a New Client\n His Name: " + str(name[0]) + "\n His Time: " + str(name[1]))
        server.quit()

        bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ " + str(name[1]) + " ‚ò∫")


@server.route('/' + TOKEN, methods=['POST'])
def getMessage():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200


@server.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url='https://salty-scrubland-00388.herokuapp.com/' + TOKEN)
    return "!", 200


if __name__ == "__main__":
    server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
